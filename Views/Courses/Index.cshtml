@model List<Courses>

<h2 class="m-5">Courses</h2>

<div class="d-flex flex-column gap-4 m-5">

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @* Search Container *@
    <form asp-controller="Courses" asp-action="Search" method="get" class="d-flex flex-row justify-content-between">
         <div class="form-group" style="width: 50%">
            <input type="text" name="search" class="form-control" placeholder="Search by course"/>
        </div>

        <div class="form-group" style="width: 35%">
            <select class="form-select" id="level" name="level">
                <option value="">Search by level</option>
                <option value="Intermediate">Intermediate</option>
                <option value="Beginner">Beginner</option>
                <option value="Advanced">Advanced</option>
            </select>
        </div>

        <div class="bg-white d-flex justify-content-center" style="width: 10%">
            <button type="submit" class="bg-white border-0">            
                <i class="bi bi-search w-auto"></i>  Search
            </button>
        </div>
    </form>




    @* Add Button *@
    <button type="button" class="btn btn-primary" id="openAddModal" style="width:fit-content">
        <i class="bi bi-plus"></i> Add New Course
    </button>


    

    @* Courses table *@
    <div class="d-flex flex-column align-items-center">
         <table class="table table-bordered table-striped bg-white">
             <thead>
            <tr>
                <th>ID</th>
                <th>Course</th>
                <th>Description</th>
                <th>Duration(H)</th>
                <th>Instructor</th>
                <th>Level</th>
                <th>Fee($)</th>
                <th>Enrolled Students</th>
                <th>Actions</th>
            </tr>
            </thead>
            <tbody>
                @if (Model !=null && Model.Any())
                {
                    @foreach (var courses in Model) {
                        <tr>
                            <td>@courses.Course_Id</td>
                            <td>@courses.Course</td>
                            <td>@courses.Description</td>
                            <td>@courses.Duration</td>
                            <td>@courses.Instructor</td>
                            <td>@courses.Level</td>
                            <td>@courses.Fee</td>
                            <td class="text-center"><a href="#">view</a></td>
                            <td class="text-center">
                                <button type="button" 
                                        class="btn btn-primary m-1 openEditModal" 
                                        data-id="@courses.Course_Id">
                                    <i class="bi bi-pencil-square"></i>
                                </button>
                                <button type="button"  
                                    data-id="@courses.Course_Id"
                                    class="btn btn-danger openDeleteModal">
                                    <i class="bi bi-trash-fill"></i>
                                </button>
                            </td>
                        </tr>
                    }
                } else 
                {
                 <tr>
                    <td colspan="11" class="text-center text-muted">No Course found.</td>
                 </tr>   
                }
            </tbody>
        </table>
    
        <nav aria-label="Courses Pagination">
            <ul class="pagination">
                <li class="page-item @(ViewBag.Window == 1 ? "disabled" : "")">
                    <a class="page-link" 
                        asp-action="Search" 
                        asp-route-page="@((ViewBag.StartPage - 5) > 0 ? ViewBag.StartPage - 5 : 1)" 
                        asp-route-window="@(ViewBag.Window - 1)"
                        asp-route-search="@ViewBag.Search"
                        asp-route-level="@ViewBag.Level">
                        Previous
                    </a>
                </li>

                @for (int i = ViewBag.StartPage; i <= ViewBag.EndPage; i++)
                {
                    <li class="page-item @(ViewBag.CurrentPage == i ? "active" : "")">
                        <a class="page-link"
                            asp-action="Search" 
                            asp-route-page="@i"
                            asp-route-window="@ViewBag.Window"
                            asp-route-search="@ViewBag.Search"
                            asp-route-level="@ViewBag.Level">
                            @i
                        </a>
                    </li>
                }

                <li class="page-item @(ViewBag.EndPage == ViewBag.TotalPages ? "disabled" : "")">
                    <a class="page-link" 
                        asp-action="Search" 
                        asp-route-page="@((ViewBag.EndPage + 1) <= ViewBag.TotalPages ? ViewBag.EndPage + 1 : ViewBag.TotalPages)" 
                        asp-route-window="@(ViewBag.Window + 1)"
                        asp-route-search="@ViewBag.Search"
                        asp-route-level="@ViewBag.Level">
                        Next
                    </a>
                </li>
                
            </ul>
        </nav>


    </div>




    @* Enrolled in table *@
    <div class="d-flex flex-column align-items-center">
         <table class="table table-bordered table-striped bg-white">
             <thead>
            <tr>
                <th>ID</th>
                <th>Student Name</th>
                <th>Mark</th>
                <th>Enrollment ID</th>
                <th>Actions</th>
            </tr>
            </thead>
            <tbody>
                <tr>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td class="text-center">
                        <a type="button" 
                            asp-action="" asp-route-id=""
                                class="btn btn-primary"><i class="bi bi-plus-circle-fill"></i>
                                Set Mark
                        </a>
                    </td>                    
                </tr>
                
            </tbody>
        </table>
    
        <nav aria-label="...">
            <ul class="pagination">
                <li class="page-item disabled">
                    <a class="page-link" href="#" tabindex="-1">Previous</a>
                </li>
                <li class="page-item">
                    <a class="page-link" href="#">1</a>
                </li>
                <li class="page-item active">
                    <a class="page-link" href="#">2</a>
                </li>
                <li class="page-item">
                    <a class="page-link" href="#">3</a>
                </li>
                <li class="page-item">
                    <a class="page-link" href="#">Next</a>
                </li>
            </ul>
        </nav>
    </div>



    @* Courses demogarphics *@
    <div class="d-flex flex-row justify-content-between">

        <div class="bg-white d-flex flex-column align-items-center gap-3 p-3" style="width: 30%; border-radius: 5px;">
            <i class="fs-4 bi-journal-text"></i> 
            <div>Total Courses</div>
            <div>@ViewBag.CoursesCount</div>
        </div>

        <div class="bg-white d-flex flex-column align-items-center gap-3 p-3" style="width: 30%; border-radius: 5px;">
            <i class="fs-4 bi-clock"></i> 
            <div>Total Course Hours</div>
            <div>@ViewBag.CoursesHours</div>
        </div>

        <div class="bg-white d-flex flex-column align-items-center gap-3 p-3" style="width: 30%; border-radius: 5px;">
            <i class="fs-4 bi-star-fill"></i> 
            <div>Popular Course</div>
            <div>
                @ViewBag.MostPopularCourse
            </div>
        </div>

    </div>


</div>





@* Add Modal *@
<div id="addModalContainer"></div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const button = document.getElementById("openAddModal");
        const container = document.getElementById("addModalContainer");

        button.addEventListener("click", function () {
            fetch("/Courses/AddModal")
                .then(response => response.text())
                .then(html => {
                    container.innerHTML = html;
                    const modal = document.getElementById("addModal");
                    if (modal) {
                        // Bootstrap 5 modal
                        const modalInstance = new bootstrap.Modal(modal);
                        modalInstance.show();
                    }
                })
                .catch(error => {
                    console.error("Error loading modal:", error);
                });
            });
        });
</script>


@* Edit Modal *@
<div id="editModalContainer"></div>

<script>
   document.addEventListener("DOMContentLoaded", function () {
        const buttons = document.querySelectorAll(".openEditModal");
        const container = document.getElementById("editModalContainer");

        buttons.forEach(button => {
            button.addEventListener("click", function () {
                const courseId = this.getAttribute("data-id");

                fetch(`/Courses/EditModal?id=${courseId}`)
                    .then(response => response.text())
                    .then(html => {
                        container.innerHTML = html;
                        const modal = document.getElementById("editModal");
                        if (modal) {
                            const modalInstance = new bootstrap.Modal(modal);
                            modalInstance.show();
                        }
                    })
                    .catch(error => {
                        console.error("Error loading modal:", error);
                    });
            });
        });
    });
</script>


@* Delete Modal *@
<div id="deleteModalContainer"></div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const deleteButtons = document.querySelectorAll(".openDeleteModal");
        const container = document.getElementById("deleteModalContainer");

        deleteButtons.forEach(button => {
            button.addEventListener("click", function () {
                const studentId = this.getAttribute("data-id");

                fetch(`/Courses/DeleteModal?id=${studentId}`)
                    .then(response => response.text())
                    .then(html => {
                        container.innerHTML = html;
                        const modal = document.getElementById("deleteModal");
                        if (modal) {
                            const modalInstance = new bootstrap.Modal(modal);
                            modalInstance.show();
                        }
                    })
                    .catch(error => {
                        console.error("Error loading delete modal:", error);
                    });
            });
        });
    });
</script>








